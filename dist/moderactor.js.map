{"version":3,"file":"moderactor.js","sources":["../src/core/adapter.js","../src/core/requests.js","../src/core/state.js","../src/adapters/bridge.js","../src/adapters/forumactif.js","../src/core/utils.js","../src/actions/_base.js","../src/actions/forum.js","../src/actions/topic.js","../src/actions/post.js","../src/actions/user.js","../src/actions/chat.js","../src/moderactor.js","../src/env.js"],"sourcesContent":["export class Adapter {\r\n    async get(url) {\r\n        throw new Error(\"Adapter.get not implemented\");\r\n    }\r\n    async post(url, data) {\r\n        throw new Error(\"Adapter.post not implemented\");\r\n    }\r\n    async getForm(url, formSelector) {\r\n        throw new Error(\"Adapter.getForm not implemented\");\r\n    }\r\n    bridge(resp) {\r\n        throw new Error(\"Adapter.bridge not implemented\");\r\n    }\r\n    get tid() {\r\n        return null;\r\n    }\r\n    get pagetype() {\r\n        return \"\";\r\n    }\r\n}\r\n","function encodeForm(data) {\r\n    var form_data = new FormData();\r\n\r\n    for (var key in data) {\r\n        form_data.append(key, data[key]);\r\n    }\r\n    return [...form_data.entries()]\r\n        .map((x) => `${encodeURIComponent(x[0])}=${encodeURIComponent(x[1])}`)\r\n        .join(\"&\");\r\n}\r\n\r\nexport function htmlFromText(text) {\r\n    const parser = new DOMParser();\r\n    return parser.parseFromString(text, \"text/html\");\r\n}\r\n\r\nexport async function httpGet(url) {\r\n    const r = await fetch(url, { credentials: \"same-origin\" });\r\n    const text = await r.text();\r\n    return { ok: r.ok, status: r.status, text, doc: htmlFromText(text) };\r\n}\r\n\r\nexport async function httpPost(url, data) {\r\n    const body = encodeForm(data);\r\n    const r = await fetch(url, {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body,\r\n    });\r\n    const text = await r.text();\r\n    return { ok: r.ok, status: r.status, text, doc: htmlFromText(text) };\r\n}\r\n","function getTidFromDomOrUrl() {\r\n    const input = document.querySelector(\"input[name=tid]\");\r\n    if (input?.value) return input.value;\r\n\r\n    const anchor = document.querySelector(\"a[href*='&tid=']\");\r\n    const href = anchor?.getAttribute(\"href\") || \"\";\r\n    const m = href.match(/[?&]tid=([a-z0-9]+)/i);\r\n    if (m) return m[1];\r\n\r\n    // fallback: parse pathname (/t123-/f456-)\r\n    const p = location.pathname;\r\n    const t = p.match(/\\/t(\\d+)(?:p\\d+)?-/);\r\n    if (t) return t[1];\r\n    const f = p.match(/\\/f(\\d+)(?:p\\d+)?-/);\r\n    if (f) return f[1];\r\n\r\n    return null;\r\n}\r\n\r\nfunction getPageType() {\r\n    const p = location.pathname;\r\n    if (/^\\/t\\d+(p\\d+)?-/.test(p)) return \"topic\";\r\n    if (/^\\/f\\d+(p\\d+)?-/.test(p)) return \"forum\";\r\n    if (/^\\/c\\d+-/.test(p)) return \"category\";\r\n    const qs = p + location.search;\r\n    const m = qs.match(/\\/modcp\\?mode=([^&]+)/);\r\n    return m ? m[1] : \"\";\r\n}\r\n\r\nfunction getResId() {\r\n    const p = location.pathname;\r\n    let m = p.match(/^\\/[tfc](\\d+)(?:p\\d+)?-/);\r\n    if (!m) m = p.match(/^\\/u(\\d+)/);\r\n    return m ? Number(m[1]) : 0;\r\n}\r\n\r\nfunction getPageNum() {\r\n    const p = location.pathname;\r\n    const m = p.match(/^\\/[tf]\\d+(p\\d+)-/);\r\n    return m ? Number(m[1].slice(1)) : 0;\r\n}\r\n\r\nexport const state = {\r\n    get tid() {\r\n        return getTidFromDomOrUrl();\r\n    },\r\n    get pagetype() {\r\n        return getPageType();\r\n    },\r\n    get resid() {\r\n        return getResId();\r\n    },\r\n    get pagenum() {\r\n        return getPageNum();\r\n    },\r\n    get charset() {\r\n        return (\r\n            document.charset ||\r\n            document.characterSet ||\r\n            \"utf-8\"\r\n        ).toLowerCase();\r\n    },\r\n};\r\n","// ──────────────────────────────────────────────────────────────────────────────\r\n// File: src/adapters/phpbb3/bridge.js\r\n// ──────────────────────────────────────────────────────────────────────────────\r\n// Bridge pour Forumactif : parse les pages de confirmation/erreur\r\n\r\nfunction first(el, sel) {\r\n    return el.querySelector(sel) || undefined;\r\n}\r\nfunction all(el, sel) {\r\n    return Array.from(el.querySelectorAll(sel));\r\n}\r\n\r\nfunction extractMessage(doc) {\r\n    // Récupère tous les <p> et concatène leurs textes\r\n    const ps = Array.from(doc.querySelectorAll(\"p\")).map((p) =>\r\n        p.textContent.trim()\r\n    );\r\n    const text = ps.join(\" \").replace(/\\s+/g, \" \").trim();\r\n    return text;\r\n}\r\n\r\nfunction parseIdsFromHref(href) {\r\n    const ids = {};\r\n    if (!href) return ids;\r\n    const t = href.match(/\\/(?:t|viewtopic\\?.*?t=)(\\d+)/);\r\n    if (t) ids.topic_id = Number(t[1]);\r\n    const f = href.match(/\\/f(\\d+)-/);\r\n    if (f) ids.forum_id = Number(f[1]);\r\n    const p = href.match(/#(\\d+)$/);\r\n    if (p) ids.post_id = Number(p[1]);\r\n    return ids;\r\n}\r\n\r\nfunction inferAction(message) {\r\n    const lower = (message || \"\").toLowerCase();\r\n    if (/déplacé/.test(lower)) return \"topic.move\";\r\n    if (/verrouill/.test(lower) && !/déverrouill/.test(lower))\r\n        return \"topic.lock\";\r\n    if (/déverrouill/.test(lower)) return \"topic.unlock\";\r\n    if (/supprim/.test(lower)) return \"topic.delete\";\r\n    if (/corbeille|poubelle/.test(lower)) return \"topic.trash\";\r\n    if (/répon|enregistré avec succès/.test(lower)) return \"topic.post\";\r\n    if (/nouveau sujet/.test(lower)) return \"forum.post\";\r\n    if (/message priv/.test(lower)) return \"user.pm\";\r\n    if (/banni/.test(lower)) return \"user.ban\";\r\n    if (/débanni|unban/.test(lower)) return \"user.unban\";\r\n    return \"unknown\";\r\n}\r\n\r\nfunction validateOk(action, message) {\r\n    const lowerMsg = (message || \"\").toLowerCase();\r\n    switch (action) {\r\n        case \"topic.move\":\r\n            return /déplacé/.test(lowerMsg);\r\n        case \"topic.lock\":\r\n            return /verrouill/.test(lowerMsg);\r\n        case \"topic.unlock\":\r\n            return /déverrouill/.test(lowerMsg);\r\n        case \"topic.delete\":\r\n            return /supprim/.test(lowerMsg);\r\n        case \"topic.trash\":\r\n            return /corbeille|poubelle/.test(lowerMsg);\r\n        case \"topic.post\":\r\n            return /répon|enregistré avec succès/.test(lowerMsg);\r\n        case \"forum.post\":\r\n            return /nouveau sujet/.test(lowerMsg);\r\n        case \"user.pm\":\r\n            return /message priv/.test(lowerMsg);\r\n        case \"user.ban\":\r\n            return /banni/.test(lowerMsg);\r\n        case \"user.unban\":\r\n            return /débanni|unban/.test(lowerMsg);\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nexport function bridgeParse(resp) {\r\n    const { doc, text } = resp;\r\n    const message = extractMessage(doc);\r\n\r\n    const firstLink = first(doc, \"a[href]\");\r\n    const href = firstLink ? firstLink.getAttribute(\"href\") : \"\";\r\n    const ids = parseIdsFromHref(href);\r\n\r\n    const action = inferAction(message);\r\n    const ok = validateOk(action, message);\r\n\r\n    const links = {\r\n        first: href || undefined,\r\n        topic:\r\n            all(doc, 'a[href^=\"/t\"], a[href*=\"viewtopic\"]').map((a) =>\r\n                a.getAttribute(\"href\")\r\n            )[0] || undefined,\r\n        forum:\r\n            all(doc, 'a[href^=\"/f\"]').map((a) => a.getAttribute(\"href\"))[0] ||\r\n            undefined,\r\n    };\r\n\r\n    return {\r\n        ok,\r\n        status: resp.status,\r\n        action,\r\n        message,\r\n        ids,\r\n        links,\r\n        href,\r\n        raw: text,\r\n    };\r\n}\r\n\r\nexport const __bridgeInternals = {\r\n    extractMessage,\r\n    parseIdsFromHref,\r\n    inferAction,\r\n    validateOk,\r\n};\r\n","import { Adapter } from \"../core/adapter.js\";\r\nimport { httpGet, httpPost } from \"../core/requests.js\";\r\nimport { state } from \"../core/state.js\";\r\nimport { bridgeParse } from \"./bridge.js\";\r\n\r\nclass ForumactifAdapter extends Adapter {\r\n    async get(url) {\r\n        return httpGet(url);\r\n    }\r\n    async post(url, data) {\r\n        return httpPost(url, data);\r\n    }\r\n\r\n    async getForm(url, formSelector) {\r\n        const resp = await this.get(url);\r\n        if (!resp.ok)\r\n            return { ok: false, status: resp.status, text: resp.text };\r\n        const form = resp.doc.querySelector(formSelector);\r\n        if (!form) return { ok: false, status: 404, text: \"Form not found\" };\r\n        const fd = new FormData(form);\r\n        const obj = Object.fromEntries(fd.entries());\r\n        return { ok: true, data: obj, doc: resp.doc };\r\n    }\r\n\r\n    bridge(resp) {\r\n        return bridgeParse(resp);\r\n    }\r\n    get tid() {\r\n        return state.tid;\r\n    }\r\n    get pagetype() {\r\n        return state.pagetype;\r\n    }\r\n}\r\n\r\nconst forumactifAdapter = new ForumactifAdapter();\r\nexport default forumactifAdapter;\r\n","export const isArray = Array.isArray;\r\n\r\nexport const toArray = (v) => (v == null ? [] : isArray(v) ? v : [v]);\r\n\r\nexport function byIdOrArray(input) {\r\n    return toArray(input)\r\n        .filter((x) => x != null)\r\n        .map((x) => (typeof x === \"number\" ? x : parseInt(String(x), 10)))\r\n        .filter((x) => Number.isFinite(x) && x > 0);\r\n}\r\n\r\nexport function getCookie(cname) {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(\";\");\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == \" \") {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n","import { byIdOrArray } from \"../core/utils.js\";\r\n\r\nexport class BaseResource {\r\n    constructor(ids, adapter) {\r\n        this.ids = byIdOrArray(ids);\r\n        this.adapter = adapter;\r\n    }\r\n    _all(promises) {\r\n        return Promise.all(promises);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class ForumResource extends BaseResource {\r\n    async post(input) {\r\n        const { subject, message, notify = 0 } = input || {};\r\n        if (!subject || !message)\r\n            throw new Error(\"Forum.post: subject et message sont requis\");\r\n        const tasks = this.ids.map((f) =>\r\n            this.adapter\r\n                .post(\"/post\", {\r\n                    post: 1,\r\n                    mode: \"newtopic\",\r\n                    f,\r\n                    subject,\r\n                    message,\r\n                    notify,\r\n                })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class TopicResource extends BaseResource {\r\n    async post(input) {\r\n        const { message, notify = 0 } = input || {};\r\n        if (!message) throw new Error(\"Topic.post: message est requis\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .post(\"/post\", { post: 1, mode: \"reply\", t, message, notify })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async lock() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.lock: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .get(`/modcp?mode=lock&t=${t}&tid=${tid}`)\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async unlock() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.unlock: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .get(`/modcp?mode=unlock&t=${t}&tid=${tid}`)\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async move(newForumId) {\r\n        if (!newForumId) throw new Error(\"Topic.move: forum id manquant\");\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.move: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .post(`/modcp?tid=${tid}`, {\r\n                    tid,\r\n                    new_forum: \"f\" + newForumId,\r\n                    mode: \"move\",\r\n                    t,\r\n                    confirm: 1,\r\n                })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async trash() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.trash: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .get(`/modcp?mode=trash&t=${t}&tid=${tid}`)\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async delete() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.remove: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .post(`/modcp?tid=${tid}`, { t, mode: \"delete\", confirm: 1 })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class PostResource extends BaseResource {\r\n    async delete() {\r\n        const tasks = this.ids.map((p) =>\r\n            this.adapter\r\n                .post(\"/post\", { p, mode: \"delete\", confirm: \"\" })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async update({ message }) {\r\n        if (!message) throw new Error(\"Post.update: message requis\");\r\n        const tasks = this.ids.map(async (p) => {\r\n            const form = await this.adapter.getForm(\r\n                `/post?p=${p}&mode=editpost`,\r\n                'form[name=\"post\"]'\r\n            );\r\n            if (!form.ok) return form;\r\n            const data = { ...form.data, message };\r\n            data.post = 1;\r\n            const resp = await this.adapter.post(\"/post\", data);\r\n            return this.adapter.bridge(resp);\r\n        });\r\n        return this._all(tasks);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class UserResource extends BaseResource {\r\n    async pm({ subject, message }) {\r\n        if (!subject || !message)\r\n            throw new Error(\"User.pm: subject et message requis\");\r\n        const username = this.ids.join(\", \");\r\n        const resp = await this.adapter.post(\"/privmsg\", {\r\n            username,\r\n            mode: \"post\",\r\n            post: 1,\r\n            subject,\r\n            message,\r\n        });\r\n        return this.adapter.bridge(resp);\r\n    }\r\n\r\n    async ban({ days = 0, reason = \"\" } = {}) {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"User.ban: tid introuvable\");\r\n        const tasks = this.ids.map((user_id) =>\r\n            this.adapter\r\n                .post(`/modcp?tid=${tid}`, {\r\n                    tid,\r\n                    confirm: 1,\r\n                    mode: \"ban\",\r\n                    user_id,\r\n                    ban_user_date: days,\r\n                    ban_user_reason: reason,\r\n                })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async unban() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"User.unban: tid introuvable\");\r\n        const resp = await this.adapter.post(\r\n            `/admin/index.forum?part=users_groups&sub=users&mode=ban_control&extended_admin=1&tid=${tid}`,\r\n            { users_to_unban: this.ids, unban_users: 1 }\r\n        );\r\n        return this.adapter.bridge(resp);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class ChatResource extends BaseResource {\r\n    constructor(adapter) {\r\n        super([], adapter);\r\n    }\r\n    async post({ message }) {\r\n        if (!message) throw new Error(\"Chat.post: message requis\");\r\n        await this.adapter.post(\"/chatbox/actions.forum\", {\r\n            method: \"send\",\r\n            archive: 0,\r\n            message,\r\n        });\r\n        return { ok: true };\r\n    }\r\n}\r\n","import forumactifAdapter from \"./adapters/forumactif.js\";\r\nimport ForumResource from \"./actions/forum.js\";\r\nimport TopicResource from \"./actions/topic.js\";\r\nimport PostResource from \"./actions/post.js\";\r\nimport UserResource from \"./actions/user.js\";\r\nimport ChatResource from \"./actions/chat.js\";\r\nimport { env as envFn } from \"./env.js\";\r\n\r\nconst Moderactor = {\r\n    forum: (idOrArray) => new ForumResource(idOrArray, forumactifAdapter),\r\n    topic: (idOrArray) => new TopicResource(idOrArray, forumactifAdapter),\r\n    post: (idOrArray) => new PostResource(idOrArray, forumactifAdapter),\r\n    user: (idOrArray) => new UserResource(idOrArray, forumactifAdapter),\r\n    chat: () => new ChatResource(forumactifAdapter),\r\n    adapter: forumactifAdapter,\r\n    env: envFn,\r\n};\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Moderactor = Moderactor;\r\n}\r\n\r\nexport default Moderactor;\r\n","import { state } from \"./core/state.js\";\r\nimport { getCookie } from \"./core/utils.js\";\r\n\r\nexport async function env(url) {\r\n    console.log(\r\n        \"fa_\" + location.host.replace(/\\./g, \"_\") + \"_data\",\r\n        getCookie(\"fa_\" + location.host.replace(/\\./g, \"_\") + \"_data\"),\r\n        parseInt(getCookie(\"fa_\" + location.host.replace(/\\./g, \"_\") + \"_data\"))\r\n    );\r\n    const user_id = parseInt(\r\n        ((\r\n            getCookie(\"fa_\" + location.host.replace(/\\./g, \"_\") + \"_data\") || \"\"\r\n        ).match(/\"userid\";(?:s:[0-9]+:\"|i:)([0-9]+)/) || [0, -1])[1]\r\n    );\r\n\r\n    const _ud = _userdata || {};\r\n\r\n    // Si pas d'URL : on retourne l'env courant (basé sur state)\r\n    if (!url) {\r\n        const u = location;\r\n        const hash = u.hash ? u.hash.substring(1) : null;\r\n\r\n        return {\r\n            url: location.href,\r\n            t_id: state.tid,\r\n            page_type: state.pagetype,\r\n            res_id: state.resid,\r\n            page_num: state.pagenum,\r\n            charset: state.charset,\r\n            anchor_id: hash,\r\n            user_id,\r\n            is_guest: user_id == -1,\r\n            is_admin: _ud[\"user_level\"] == 1,\r\n            is_mod: _ud[\"user_level\"] > 0,\r\n            lang: _ud[\"user_lang\"],\r\n        };\r\n    }\r\n\r\n    // Sinon, on va chercher l'URL et on parse les infos utiles\r\n    const r = await fetch(url, { credentials: \"same-origin\" });\r\n    const text = await r.text();\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(text, \"text/html\");\r\n\r\n    const u = new URL(url, location.href);\r\n    const pathname = u.pathname;\r\n    const hash = u.hash ? u.hash.substring(1) : null;\r\n\r\n    // extraction minimale d'infos depuis le DOM chargé\r\n    const mTid = pathname.match(/\\/t(\\d+)(?:p\\d+)?-/);\r\n    const mFid = pathname.match(/\\/f(\\d+)(?:p\\d+)?-/);\r\n\r\n    return {\r\n        url,\r\n        t_id:\r\n            doc.querySelector(\"input[name=tid]\")?.value ||\r\n            (mTid ? mTid[1] : null) ||\r\n            (mFid ? mFid[1] : null),\r\n        page_type: (() => {\r\n            if (/^\\/t\\d+(p\\d+)?-/.test(pathname)) return \"topic\";\r\n            if (/^\\/f\\d+(p\\d+)?-/.test(pathname)) return \"forum\";\r\n            if (/^\\/c\\d+-/.test(pathname)) return \"category\";\r\n            return \"\";\r\n        })(),\r\n        res_id: (() => {\r\n            let m = pathname.match(/^\\/[tfc](\\d+)(?:p\\d+)?-/);\r\n            if (!m) m = pathname.match(/^\\/u(\\d+)/);\r\n            return m ? Number(m[1]) : 0;\r\n        })(),\r\n        page_num: (() => {\r\n            const m = pathname.match(/^\\/[tf]\\d+(p\\d+)-/);\r\n            return m ? Number(m[1].slice(1)) : 0;\r\n        })(),\r\n        charset: (doc.characterSet || \"utf-8\").toLowerCase(),\r\n        anchor_id: hash,\r\n        user_id,\r\n        is_guest: user_id == -1,\r\n        is_admin: _ud[\"user_level\"] == 1,\r\n        is_mod: _ud[\"user_level\"] > 0,\r\n        lang: _ud[\"user_lang\"],\r\n    };\r\n}\r\n"],"names":["Adapter","get","url","Error","post","data","getForm","formSelector","bridge","resp","tid","pagetype","htmlFromText","text","DOMParser","parseFromString","async","httpPost","body","form_data","FormData","key","append","entries","map","x","encodeURIComponent","join","encodeForm","r","fetch","method","credentials","headers","ok","status","doc","state","input","document","querySelector","value","anchor","m","getAttribute","match","p","location","pathname","t","f","getTidFromDomOrUrl","test","search","getPageType","resid","Number","getResId","pagenum","slice","getPageNum","charset","characterSet","toLowerCase","all","el","sel","Array","from","querySelectorAll","bridgeParse","message","textContent","trim","replace","extractMessage","firstLink","undefined","href","ids","topic_id","forum_id","post_id","parseIdsFromHref","action","lower","inferAction","lowerMsg","validateOk","links","first","topic","a","forum","raw","forumactifAdapter","httpGet","this","form","fd","Object","fromEntries","isArray","byIdOrArray","v","filter","parseInt","String","isFinite","getCookie","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","BaseResource","constructor","adapter","_all","promises","Promise","ForumResource","subject","notify","tasks","mode","then","TopicResource","lock","unlock","move","newForumId","new_forum","confirm","trash","PostResource","update","UserResource","pm","username","ban","days","reason","user_id","ban_user_date","ban_user_reason","unban","users_to_unban","unban_users","ChatResource","super","archive","Moderactor","idOrArray","user","chat","env","console","log","host","_ud","_userdata","u","hash","t_id","page_type","res_id","page_num","anchor_id","is_guest","is_admin","is_mod","lang","URL","mTid","mFid","window"],"mappings":"wCAAO,MAAMA,EACT,SAAMC,CAAIC,GACN,MAAM,IAAIC,MAAM,8BACpB,CACA,UAAMC,CAAKF,EAAKG,GACZ,MAAM,IAAIF,MAAM,+BACpB,CACA,aAAMG,CAAQJ,EAAKK,GACf,MAAM,IAAIJ,MAAM,kCACpB,CACA,MAAAK,CAAOC,GACH,MAAM,IAAIN,MAAM,iCACpB,CACA,OAAIO,GACA,OAAO,IACX,CACA,YAAIC,GACA,MAAO,EACX,ECPG,SAASC,EAAaC,GAEzB,OADe,IAAIC,WACLC,gBAAgBF,EAAM,YACxC,CAQOG,eAAeC,EAASf,EAAKG,GAChC,MAAMa,EAvBV,SAAoBb,GAChB,IAAIc,EAAY,IAAIC,SAEpB,IAAK,IAAIC,KAAOhB,EACZc,EAAUG,OAAOD,EAAKhB,EAAKgB,IAE/B,MAAO,IAAIF,EAAUI,WAChBC,IAAKC,GAAM,GAAGC,mBAAmBD,EAAE,OAAOC,mBAAmBD,EAAE,OAC/DE,KAAK,IACd,CAciBC,CAAWvB,GAClBwB,QAAUC,MAAM5B,EAAK,CACvB6B,OAAQ,OACRC,YAAa,cACbC,QAAS,CACL,eAAgB,mDAEpBf,SAEEL,QAAagB,EAAEhB,OACrB,MAAO,CAAEqB,GAAIL,EAAEK,GAAIC,OAAQN,EAAEM,OAAQtB,OAAMuB,IAAKxB,EAAaC,GACjE,CCQO,MAAMwB,EAAQ,CACjB,OAAI3B,GACA,OA5CR,WACI,MAAM4B,EAAQC,SAASC,cAAc,mBACrC,GAAIF,GAAOG,MAAO,OAAOH,EAAMG,MAE/B,MAAMC,EAASH,SAASC,cAAc,oBAEhCG,GADOD,GAAQE,aAAa,SAAW,IAC9BC,MAAM,wBACrB,GAAIF,EAAG,OAAOA,EAAE,GAGhB,MAAMG,EAAIC,SAASC,SACbC,EAAIH,EAAED,MAAM,sBAClB,GAAII,EAAG,OAAOA,EAAE,GAChB,MAAMC,EAAIJ,EAAED,MAAM,sBAClB,OAAIK,EAAUA,EAAE,GAET,IACX,CA2BeC,EACX,EACA,YAAIxC,GACA,OA5BR,WACI,MAAMmC,EAAIC,SAASC,SACnB,GAAI,kBAAkBI,KAAKN,GAAI,MAAO,QACtC,GAAI,kBAAkBM,KAAKN,GAAI,MAAO,QACtC,GAAI,WAAWM,KAAKN,GAAI,MAAO,WAC/B,MACMH,GADKG,EAAIC,SAASM,QACXR,MAAM,yBACnB,OAAOF,EAAIA,EAAE,GAAK,EACtB,CAoBeW,EACX,EACA,SAAIC,GACA,OArBR,WACI,MAAMT,EAAIC,SAASC,SACnB,IAAIL,EAAIG,EAAED,MAAM,2BAEhB,OADKF,IAAGA,EAAIG,EAAED,MAAM,cACbF,EAAIa,OAAOb,EAAE,IAAM,CAC9B,CAgBec,EACX,EACA,WAAIC,GACA,OAjBR,WACI,MACMf,EADII,SAASC,SACPH,MAAM,qBAClB,OAAOF,EAAIa,OAAOb,EAAE,GAAGgB,MAAM,IAAM,CACvC,CAaeC,EACX,EACA,WAAIC,GACA,OACItB,SAASsB,SACTtB,SAASuB,cACT,SACFC,aACN,GCrDJ,SAASC,EAAIC,EAAIC,GACb,OAAOC,MAAMC,KAAKH,EAAGI,iBAAiBH,GAC1C,CAmEO,SAASI,EAAY7D,GACxB,MAAM2B,IAAEA,EAAGvB,KAAEA,GAASJ,EAChB8D,EAnEV,SAAwBnC,GAMpB,OAJW+B,MAAMC,KAAKhC,EAAIiC,iBAAiB,MAAM7C,IAAKsB,GAClDA,EAAE0B,YAAYC,QAEF9C,KAAK,KAAK+C,QAAQ,OAAQ,KAAKD,MAEnD,CA4DoBE,CAAevC,GAEzBwC,GA5ESV,EA4Ec,UAAL9B,EA3EdI,cAAc0B,SAAQW,GADpC,IAAmBX,EA6Ef,MAAMY,EAAOF,EAAYA,EAAUhC,aAAa,QAAU,GACpDmC,EA9DV,SAA0BD,GACtB,MAAMC,EAAM,CAAA,EACZ,IAAKD,EAAM,OAAOC,EAClB,MAAM9B,EAAI6B,EAAKjC,MAAM,iCACjBI,IAAG8B,EAAIC,SAAWxB,OAAOP,EAAE,KAC/B,MAAMC,EAAI4B,EAAKjC,MAAM,aACjBK,IAAG6B,EAAIE,SAAWzB,OAAON,EAAE,KAC/B,MAAMJ,EAAIgC,EAAKjC,MAAM,WAErB,OADIC,IAAGiC,EAAIG,QAAU1B,OAAOV,EAAE,KACvBiC,CACX,CAoDgBI,CAAiBL,GAEvBM,EApDV,SAAqBb,GACjB,MAAMc,GAASd,GAAW,IAAIR,cAC9B,MAAI,UAAUX,KAAKiC,GAAe,aAC9B,YAAYjC,KAAKiC,KAAW,cAAcjC,KAAKiC,GACxC,aACP,cAAcjC,KAAKiC,GAAe,eAClC,UAAUjC,KAAKiC,GAAe,eAC9B,qBAAqBjC,KAAKiC,GAAe,cACzC,+BAA+BjC,KAAKiC,GAAe,aACnD,gBAAgBjC,KAAKiC,GAAe,aACpC,eAAejC,KAAKiC,GAAe,UACnC,QAAQjC,KAAKiC,GAAe,WAC5B,gBAAgBjC,KAAKiC,GAAe,aACjC,SACX,CAsCmBC,CAAYf,GACrBrC,EArCV,SAAoBkD,EAAQb,GACxB,MAAMgB,GAAYhB,GAAW,IAAIR,cACjC,OAAQqB,GACJ,IAAK,aACD,MAAO,UAAUhC,KAAKmC,GAC1B,IAAK,aACD,MAAO,YAAYnC,KAAKmC,GAC5B,IAAK,eACD,MAAO,cAAcnC,KAAKmC,GAC9B,IAAK,eACD,MAAO,UAAUnC,KAAKmC,GAC1B,IAAK,cACD,MAAO,qBAAqBnC,KAAKmC,GACrC,IAAK,aACD,MAAO,+BAA+BnC,KAAKmC,GAC/C,IAAK,aACD,MAAO,gBAAgBnC,KAAKmC,GAChC,IAAK,UACD,MAAO,eAAenC,KAAKmC,GAC/B,IAAK,WACD,MAAO,QAAQnC,KAAKmC,GACxB,IAAK,aACD,MAAO,gBAAgBnC,KAAKmC,GAChC,QACI,OAAO,EAEnB,CAWeC,CAAWJ,EAAQb,GAExBkB,EAAQ,CACVC,MAAOZ,QAAQD,EACfc,MACI3B,EAAI5B,EAAK,uCAAuCZ,IAAKoE,GACjDA,EAAEhD,aAAa,SACjB,SAAMiC,EACZgB,MACI7B,EAAI5B,EAAK,iBAAiBZ,IAAKoE,GAAMA,EAAEhD,aAAa,SAAS,SAC7DiC,GAGR,MAAO,CACH3C,KACAC,OAAQ1B,EAAK0B,OACbiD,SACAb,UACAQ,MACAU,QACAX,OACAgB,IAAKjF,EAEb,CC1EA,MAAMkF,EAAoB,IA9B1B,cAAgC/F,EAC5B,SAAMC,CAAIC,GACN,OHSDc,eAAuBd,GAC1B,MAAM2B,QAAUC,MAAM5B,EAAK,CAAE8B,YAAa,gBACpCnB,QAAagB,EAAEhB,OACrB,MAAO,CAAEqB,GAAIL,EAAEK,GAAIC,OAAQN,EAAEM,OAAQtB,OAAMuB,IAAKxB,EAAaC,GACjE,CGbemF,CAAQ9F,EACnB,CACA,UAAME,CAAKF,EAAKG,GACZ,OAAOY,EAASf,EAAKG,EACzB,CAEA,aAAMC,CAAQJ,EAAKK,GACf,MAAME,QAAawF,KAAKhG,IAAIC,GAC5B,IAAKO,EAAKyB,GACN,MAAO,CAAEA,IAAI,EAAOC,OAAQ1B,EAAK0B,OAAQtB,KAAMJ,EAAKI,MACxD,MAAMqF,EAAOzF,EAAK2B,IAAII,cAAcjC,GACpC,IAAK2F,EAAM,MAAO,CAAEhE,IAAI,EAAOC,OAAQ,IAAKtB,KAAM,kBAClD,MAAMsF,EAAK,IAAI/E,SAAS8E,GAExB,MAAO,CAAEhE,IAAI,EAAM7B,KADP+F,OAAOC,YAAYF,EAAG5E,WACJa,IAAK3B,EAAK2B,IAC5C,CAEA,MAAA5B,CAAOC,GACH,OAAO6D,EAAY7D,EACvB,CACA,OAAIC,GACA,OAAO2B,EAAM3B,GACjB,CACA,YAAIC,GACA,OAAO0B,EAAM1B,QACjB,GChCS2F,EAAUnC,MAAMmC,QAItB,SAASC,EAAYjE,GACxB,OAHoBkE,EAGLlE,EAHiB,MAALkE,EAAY,GAAKF,EAAQE,GAAKA,EAAI,CAACA,IAIzDC,OAAQhF,GAAW,MAALA,GACdD,IAAKC,GAAoB,iBAANA,EAAiBA,EAAIiF,SAASC,OAAOlF,GAAI,KAC5DgF,OAAQhF,GAAM+B,OAAOoD,SAASnF,IAAMA,EAAI,GAN1B,IAAC+E,CAOxB,CAEO,SAASK,EAAUC,GACtB,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmB1E,SAAS2E,QACzBC,MAAM,KAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAGK,OAAQD,IAAK,CAChC,IAAIE,EAAIN,EAAGI,GACX,KAAsB,KAAfE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAuB,GAAnBF,EAAEG,QAAQV,GACV,OAAOO,EAAEE,UAAUT,EAAKM,OAAQC,EAAED,OAE1C,CACA,MAAO,EACX,CCvBO,MAAMK,EACT,WAAAC,CAAY5C,EAAK6C,GACb3B,KAAKlB,IAAMwB,EAAYxB,GACvBkB,KAAK2B,QAAUA,CACnB,CACA,IAAAC,CAAKC,GACD,OAAOC,QAAQ/D,IAAI8D,EACvB,ECPW,MAAME,UAAsBN,EACvC,UAAMtH,CAAKkC,GACP,MAAM2F,QAAEA,EAAO1D,QAAEA,EAAO2D,OAAEA,EAAS,GAAM5F,GAAS,GAClD,IAAK2F,IAAY1D,EACb,MAAM,IAAIpE,MAAM,8CACpB,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAK0B,GACxB+C,KAAK2B,QACAxH,KAAK,QAAS,CACXA,KAAM,EACNgI,KAAM,WACNlF,IACA+E,UACA1D,UACA2D,WAEHG,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,EClBW,MAAMG,UAAsBZ,EACvC,UAAMtH,CAAKkC,GACP,MAAMiC,QAAEA,EAAO2D,OAAEA,EAAS,GAAM5F,GAAS,CAAA,EACzC,IAAKiC,EAAS,MAAM,IAAIpE,MAAM,kCAC9B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAKyB,GACxBgD,KAAK2B,QACAxH,KAAK,QAAS,CAAEA,KAAM,EAAGgI,KAAM,QAASnF,IAAGsB,UAAS2D,WACpDG,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,CAEA,UAAMI,GACF,MAAM7H,EAAMuF,KAAK2B,QAAQlH,IACzB,IAAKA,EAAK,MAAM,IAAIP,MAAM,+BAC1B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAKyB,GACxBgD,KAAK2B,QACA3H,IAAI,sBAAsBgD,SAASvC,KACnC2H,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,CAEA,YAAMK,GACF,MAAM9H,EAAMuF,KAAK2B,QAAQlH,IACzB,IAAKA,EAAK,MAAM,IAAIP,MAAM,iCAC1B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAKyB,GACxBgD,KAAK2B,QACA3H,IAAI,wBAAwBgD,SAASvC,KACrC2H,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,CAEA,UAAMM,CAAKC,GACP,IAAKA,EAAY,MAAM,IAAIvI,MAAM,iCACjC,MAAMO,EAAMuF,KAAK2B,QAAQlH,IACzB,IAAKA,EAAK,MAAM,IAAIP,MAAM,+BAC1B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAKyB,GACxBgD,KAAK2B,QACAxH,KAAK,cAAcM,IAAO,CACvBA,MACAiI,UAAW,IAAMD,EACjBN,KAAM,OACNnF,IACA2F,QAAS,IAEZP,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,CAEA,WAAMU,GACF,MAAMnI,EAAMuF,KAAK2B,QAAQlH,IACzB,IAAKA,EAAK,MAAM,IAAIP,MAAM,gCAC1B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAKyB,GACxBgD,KAAK2B,QACA3H,IAAI,uBAAuBgD,SAASvC,KACpC2H,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,CAEA,YAAM,GACF,MAAMzH,EAAMuF,KAAK2B,QAAQlH,IACzB,IAAKA,EAAK,MAAM,IAAIP,MAAM,iCAC1B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAKyB,GACxBgD,KAAK2B,QACAxH,KAAK,cAAcM,IAAO,CAAEuC,IAAGmF,KAAM,SAAUQ,QAAS,IACxDP,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,ECxEW,MAAMW,UAAqBpB,EACtC,YAAM,GACF,MAAMS,EAAQlC,KAAKlB,IAAIvD,IAAKsB,GACxBmD,KAAK2B,QACAxH,KAAK,QAAS,CAAE0C,IAAGsF,KAAM,SAAUQ,QAAS,KAC5CP,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,CAEA,YAAMY,EAAOxE,QAAEA,IACX,IAAKA,EAAS,MAAM,IAAIpE,MAAM,+BAC9B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAIR,MAAO8B,IAC9B,MAAMoD,QAAaD,KAAK2B,QAAQtH,QAC5B,WAAWwC,kBACX,qBAEJ,IAAKoD,EAAKhE,GAAI,OAAOgE,EACrB,MAAM7F,EAAO,IAAK6F,EAAK7F,KAAMkE,WAC7BlE,EAAKD,KAAO,EACZ,MAAMK,QAAawF,KAAK2B,QAAQxH,KAAK,QAASC,GAC9C,OAAO4F,KAAK2B,QAAQpH,OAAOC,KAE/B,OAAOwF,KAAK4B,KAAKM,EACrB,ECxBW,MAAMa,UAAqBtB,EACtC,QAAMuB,EAAGhB,QAAEA,EAAO1D,QAAEA,IAChB,IAAK0D,IAAY1D,EACb,MAAM,IAAIpE,MAAM,sCACpB,MAAM+I,EAAWjD,KAAKlB,IAAIpD,KAAK,MACzBlB,QAAawF,KAAK2B,QAAQxH,KAAK,WAAY,CAC7C8I,WACAd,KAAM,OACNhI,KAAM,EACN6H,UACA1D,YAEJ,OAAO0B,KAAK2B,QAAQpH,OAAOC,EAC/B,CAEA,SAAM0I,EAAIC,KAAEA,EAAO,EAACC,OAAEA,EAAS,IAAO,IAClC,MAAM3I,EAAMuF,KAAK2B,QAAQlH,IACzB,IAAKA,EAAK,MAAM,IAAIP,MAAM,6BAC1B,MAAMgI,EAAQlC,KAAKlB,IAAIvD,IAAK8H,GACxBrD,KAAK2B,QACAxH,KAAK,cAAcM,IAAO,CACvBA,MACAkI,QAAS,EACTR,KAAM,MACNkB,UACAC,cAAeH,EACfI,gBAAiBH,IAEpBhB,KAAMxG,GAAMoE,KAAK2B,QAAQpH,OAAOqB,KAEzC,OAAOoE,KAAK4B,KAAKM,EACrB,CAEA,WAAMsB,GACF,MAAM/I,EAAMuF,KAAK2B,QAAQlH,IACzB,IAAKA,EAAK,MAAM,IAAIP,MAAM,+BAC1B,MAAMM,QAAawF,KAAK2B,QAAQxH,KAC5B,wFAAwFM,IACxF,CAAEgJ,eAAgBzD,KAAKlB,IAAK4E,YAAa,IAE7C,OAAO1D,KAAK2B,QAAQpH,OAAOC,EAC/B,ECzCW,MAAMmJ,UAAqBlC,EACtC,WAAAC,CAAYC,GACRiC,MAAM,GAAIjC,EACd,CACA,UAAMxH,EAAKmE,QAAEA,IACT,IAAKA,EAAS,MAAM,IAAIpE,MAAM,6BAM9B,aALM8F,KAAK2B,QAAQxH,KAAK,yBAA0B,CAC9C2B,OAAQ,OACR+H,QAAS,EACTvF,YAEG,CAAErC,IAAI,EACjB,ECNC,MAAC6H,EAAa,CACflE,MAAQmE,GAAc,IAAIhC,EAAcgC,EAAWjE,GACnDJ,MAAQqE,GAAc,IAAI1B,EAAc0B,EAAWjE,GACnD3F,KAAO4J,GAAc,IAAIlB,EAAakB,EAAWjE,GACjDkE,KAAOD,GAAc,IAAIhB,EAAagB,EAAWjE,GACjDmE,KAAM,IAAM,IAAIN,EAAa7D,GAC7B6B,QAAS7B,EACToE,ICZGnJ,eAAmBd,GACtBkK,QAAQC,IACJ,MAAQtH,SAASuH,KAAK5F,QAAQ,MAAO,KAAO,QAC5CmC,EAAU,MAAQ9D,SAASuH,KAAK5F,QAAQ,MAAO,KAAO,SACtDgC,SAASG,EAAU,MAAQ9D,SAASuH,KAAK5F,QAAQ,MAAO,KAAO,WAEnE,MAAM4E,EAAU5C,WAERG,EAAU,MAAQ9D,SAASuH,KAAK5F,QAAQ,MAAO,KAAO,UAAY,IACpE7B,MAAM,uCAAyC,CAAC,GAAG,IAAK,IAGxD0H,EAAMC,WAAa,GAGzB,IAAKtK,EAAK,CACN,MAAMuK,EAAI1H,SACJ2H,EAAOD,EAAEC,KAAOD,EAAEC,KAAKlD,UAAU,GAAK,KAE5C,MAAO,CACHtH,IAAK6C,SAAS+B,KACd6F,KAAMtI,EAAM3B,IACZkK,UAAWvI,EAAM1B,SACjBkK,OAAQxI,EAAMkB,MACduH,SAAUzI,EAAMqB,QAChBG,QAASxB,EAAMwB,QACfkH,UAAWL,EACXpB,UACA0B,UAAqB,GAAX1B,EACV2B,SAA+B,GAArBV,EAAgB,WAC1BW,OAAQX,EAAgB,WAAI,EAC5BY,KAAMZ,EAAe,UAE7B,CAGA,MAAM1I,QAAUC,MAAM5B,EAAK,CAAE8B,YAAa,gBACpCnB,QAAagB,EAAEhB,OAEfuB,GADS,IAAItB,WACAC,gBAAgBF,EAAM,aAEnC4J,EAAI,IAAIW,IAAIlL,EAAK6C,SAAS+B,MAC1B9B,EAAWyH,EAAEzH,SACb0H,EAAOD,EAAEC,KAAOD,EAAEC,KAAKlD,UAAU,GAAK,KAGtC6D,EAAOrI,EAASH,MAAM,sBACtByI,EAAOtI,EAASH,MAAM,sBAE5B,MAAO,CACH3C,MACAyK,KACIvI,EAAII,cAAc,oBAAoBC,QACrC4I,EAAOA,EAAK,GAAK,QACjBC,EAAOA,EAAK,GAAK,MACtBV,UACQ,kBAAkBxH,KAAKJ,GAAkB,QACzC,kBAAkBI,KAAKJ,GAAkB,QACzC,WAAWI,KAAKJ,GAAkB,WAC/B,GAEX6H,OAAQ,MACJ,IAAIlI,EAAIK,EAASH,MAAM,2BAEvB,OADKF,IAAGA,EAAIK,EAASH,MAAM,cACpBF,EAAIa,OAAOb,EAAE,IAAM,CAC7B,EAJO,GAKRmI,SAAU,MACN,MAAMnI,EAAIK,EAASH,MAAM,qBACzB,OAAOF,EAAIa,OAAOb,EAAE,GAAGgB,MAAM,IAAM,CACtC,EAHS,GAIVE,SAAUzB,EAAI0B,cAAgB,SAASC,cACvCgH,UAAWL,EACXpB,UACA0B,UAAqB,GAAX1B,EACV2B,SAA+B,GAArBV,EAAgB,WAC1BW,OAAQX,EAAgB,WAAI,EAC5BY,KAAMZ,EAAe,UAE7B,SD/DsB,oBAAXgB,SACPA,OAAOxB,WAAaA"}