{"version":3,"file":"moderaction.esm.js","sources":["../src/core/adapter.js","../src/core/requests.js","../src/core/state.js","../src/adapters/bridge.js","../src/adapters/forumactif.js","../src/core/utils.js","../src/actions/_base.js","../src/actions/forum.js","../src/actions/topic.js","../src/actions/post.js","../src/actions/user.js","../src/actions/chat.js","../src/moderactor.js"],"sourcesContent":["export class Adapter {\r\n    async get(url) {\r\n        throw new Error(\"Adapter.get not implemented\");\r\n    }\r\n    async post(url, data) {\r\n        throw new Error(\"Adapter.post not implemented\");\r\n    }\r\n    async getForm(url, formSelector) {\r\n        throw new Error(\"Adapter.getForm not implemented\");\r\n    }\r\n    bridge(resp) {\r\n        throw new Error(\"Adapter.bridge not implemented\");\r\n    }\r\n    get tid() {\r\n        return null;\r\n    }\r\n    get pagetype() {\r\n        return \"\";\r\n    }\r\n}\r\n","function encodeForm(data) {\r\n    var form_data = new FormData();\r\n\r\n    for (var key in data) {\r\n        form_data.append(key, data[key]);\r\n    }\r\n    return [...form_data.entries()]\r\n        .map((x) => `${encodeURIComponent(x[0])}=${encodeURIComponent(x[1])}`)\r\n        .join(\"&\");\r\n}\r\n\r\nexport function htmlFromText(text) {\r\n    const parser = new DOMParser();\r\n    return parser.parseFromString(text, \"text/html\");\r\n}\r\n\r\nexport async function httpGet(url) {\r\n    const r = await fetch(url, { credentials: \"same-origin\" });\r\n    const text = await r.text();\r\n    return { ok: r.ok, status: r.status, text, doc: htmlFromText(text) };\r\n}\r\n\r\nexport async function httpPost(url, data) {\r\n    const body = encodeForm(data);\r\n    const r = await fetch(url, {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body,\r\n    });\r\n    const text = await r.text();\r\n    return { ok: r.ok, status: r.status, text, doc: htmlFromText(text) };\r\n}\r\n","function getTidFromDomOrUrl() {\r\n    const input = document.querySelector(\"input[name=tid]\");\r\n    if (input?.value) return input.value;\r\n\r\n    const anchor = document.querySelector(\"a[href*='&tid=']\");\r\n    const href = anchor?.getAttribute(\"href\") || \"\";\r\n    const m = href.match(/[?&]tid=([a-z0-9]+)/i);\r\n    if (m) return m[1];\r\n\r\n    // fallback: parse pathname (/t123-/f456-)\r\n    const p = location.pathname;\r\n    const t = p.match(/\\/t(\\d+)(?:p\\d+)?-/);\r\n    if (t) return t[1];\r\n    const f = p.match(/\\/f(\\d+)(?:p\\d+)?-/);\r\n    if (f) return f[1];\r\n\r\n    return null;\r\n}\r\n\r\nfunction getPageType() {\r\n    const p = location.pathname;\r\n    if (/^\\/t\\d+(p\\d+)?-/.test(p)) return \"topic\";\r\n    if (/^\\/f\\d+(p\\d+)?-/.test(p)) return \"forum\";\r\n    if (/^\\/c\\d+-/.test(p)) return \"category\";\r\n    const qs = p + location.search;\r\n    const m = qs.match(/\\/modcp\\?mode=([^&]+)/);\r\n    return m ? m[1] : \"\";\r\n}\r\n\r\nfunction getResId() {\r\n    const p = location.pathname;\r\n    let m = p.match(/^\\/[tfc](\\d+)(?:p\\d+)?-/);\r\n    if (!m) m = p.match(/^\\/u(\\d+)/);\r\n    return m ? Number(m[1]) : 0;\r\n}\r\n\r\nfunction getPageNum() {\r\n    const p = location.pathname;\r\n    const m = p.match(/^\\/[tf]\\d+(p\\d+)-/);\r\n    return m ? Number(m[1].slice(1)) : 0;\r\n}\r\n\r\nexport const state = {\r\n    get tid() {\r\n        return getTidFromDomOrUrl();\r\n    },\r\n    get pagetype() {\r\n        return getPageType();\r\n    },\r\n    get resid() {\r\n        return getResId();\r\n    },\r\n    get pagenum() {\r\n        return getPageNum();\r\n    },\r\n    get charset() {\r\n        return (\r\n            document.charset ||\r\n            document.characterSet ||\r\n            \"utf-8\"\r\n        ).toLowerCase();\r\n    },\r\n};\r\n","function all(el, sel) {\r\n    return Array.from(el.querySelectorAll(sel));\r\n}\r\n\r\n// Collecte tous les nœuds texte visibles (hors <script/style/...>)\r\nfunction collectTextNodes(root) {\r\n    const out = [];\r\n    const skip = new Set([\"SCRIPT\", \"STYLE\", \"NOSCRIPT\", \"IFRAME\"]);\r\n    const walker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, {\r\n        acceptNode(node) {\r\n            const parent = node.parentElement;\r\n            if (!parent || skip.has(parent.tagName))\r\n                return NodeFilter.FILTER_REJECT;\r\n            const txt = node.nodeValue || \"\";\r\n            if (!txt.trim()) return NodeFilter.FILTER_SKIP;\r\n            return NodeFilter.FILTER_ACCEPT;\r\n        },\r\n    });\r\n    let n;\r\n    while ((n = walker.nextNode())) out.push(n.nodeValue);\r\n    return out;\r\n}\r\n\r\nfunction normalize(s) {\r\n    return (s || \"\").replace(/\\s+/g, \" \").trim();\r\n}\r\nfunction lower(s) {\r\n    return normalize(s).toLowerCase();\r\n}\r\n\r\n// Essaie d'extraire la phrase contenant un mot-clé connu (FR/EN)\r\nfunction extractSentenceAround(text, needles) {\r\n    const t = \" \" + normalize(text) + \" \";\r\n    const idx = needles\r\n        .map((n) => t.indexOf(n))\r\n        .filter((i) => i >= 0)\r\n        .sort((a, b) => a - b)[0];\r\n    if (idx === undefined) return \"\";\r\n    // bornes de phrase (., !, ?, \\n)\r\n    const left = Math.max(\r\n        0,\r\n        t.lastIndexOf(\".\", idx) + 1,\r\n        t.lastIndexOf(\"!\", idx) + 1,\r\n        t.lastIndexOf(\"?\", idx) + 1,\r\n        t.lastIndexOf(\"\\n\", idx) + 1\r\n    );\r\n    let right = t.indexOf(\".\", idx);\r\n    if (right === -1) right = t.length;\r\n    const s = t.slice(left, right).trim();\r\n    return s || t.trim();\r\n}\r\n\r\n// Dictionnaires d’action ↔ mots‑clés (FR/EN)\r\nconst ACTION_KEYWORDS = {\r\n    \"topic.move\": [\"déplac\", \"moved\"],\r\n    \"topic.lock\": [\"verrouill\", \"locked\"],\r\n    \"topic.unlock\": [\"déverrouill\", \"unlocked\"],\r\n    \"topic.delete\": [\"supprim\", \"deleted\", \"removed\"],\r\n    \"topic.trash\": [\"corbeille\", \"poubelle\", \"trash\"],\r\n    \"topic.post\": [\"répon\", \"posted\", \"reply\"],\r\n    \"forum.post\": [\r\n        \"nouveau sujet\",\r\n        \"sujet a été créé\",\r\n        \"topic has been created\",\r\n        \"new topic\",\r\n    ],\r\n    \"user.pm\": [\"message priv\", \"private message\"],\r\n    \"user.ban\": [\"banni\", \"banned\"],\r\n    \"user.unban\": [\"débanni\", \"unbann\"],\r\n};\r\n\r\nconst ERROR_KEYWORDS = [\r\n    \"aucun\",\r\n    \"erreur\",\r\n    \"error\",\r\n    \"forbidden\",\r\n    \"not allowed\",\r\n    \"non autorisé\",\r\n    \"permission\",\r\n];\r\n\r\n// Déduction d’action à partir du texte global\r\nfunction inferActionFromText(text) {\r\n    const t = lower(text);\r\n    for (const [action, keys] of Object.entries(ACTION_KEYWORDS)) {\r\n        if (keys.some((k) => t.includes(k))) return action;\r\n    }\r\n    return \"unknown\";\r\n}\r\n\r\n// Succès si (action détectée) ∧ (au moins un mot‑clé de succès présent) ∧ (aucun mot‑clé d’erreur)\r\nfunction validateOk(action, message) {\r\n    const keys = ACTION_KEYWORDS[action] || [];\r\n    const msg = lower(message);\r\n    const hasSuccess = keys.some((k) => msg.includes(k));\r\n    const hasError = ERROR_KEYWORDS.some((k) => msg.includes(k));\r\n    return hasSuccess && !hasError;\r\n}\r\n\r\nfunction parseIdsFromHref(href) {\r\n    const ids = {};\r\n    if (!href) return ids;\r\n    const t = href.match(/\\/(?:t|viewtopic\\?.*?t=)(\\d+)/);\r\n    if (t) ids.topic_id = Number(t[1]);\r\n    const f = href.match(/\\/f(\\d+)-/);\r\n    if (f) ids.forum_id = Number(f[1]);\r\n    const p = href.match(/#(\\d+)$/);\r\n    if (p) ids.post_id = Number(p[1]);\r\n    return ids;\r\n}\r\n\r\nfunction parseAllIds(doc) {\r\n    const out = {\r\n        topic_id: undefined,\r\n        forum_id: undefined,\r\n        post_id: undefined,\r\n    };\r\n    for (const a of all(doc, \"a[href]\")) {\r\n        const ids = parseIdsFromHref(a.getAttribute(\"href\") || \"\");\r\n        if (out.topic_id === undefined && ids.topic_id !== undefined)\r\n            out.topic_id = ids.topic_id;\r\n        if (out.forum_id === undefined && ids.forum_id !== undefined)\r\n            out.forum_id = ids.forum_id;\r\n        if (out.post_id === undefined && ids.post_id !== undefined)\r\n            out.post_id = ids.post_id;\r\n    }\r\n    return out;\r\n}\r\n\r\n// Message principal : on recompose depuis TOUS les text nodes\r\nfunction extractMessage(doc) {\r\n    const textNodes = collectTextNodes(doc.body || doc);\r\n    const combined = normalize(textNodes.join(\" \"));\r\n\r\n    // 1) Extraire la phrase la plus pertinente autour d'un mot‑clé\r\n    const needles = Array.from(\r\n        new Set(Object.values(ACTION_KEYWORDS).flat())\r\n    ).map(lower);\r\n    const sentence = extractSentenceAround(combined, needles);\r\n    if (sentence) return sentence;\r\n\r\n    // 2) Secours : premier <p> s’il existe\r\n    const p = (doc.querySelector(\"p\") || {}).textContent || \"\";\r\n    if (p.trim()) return normalize(p);\r\n\r\n    // 3) Dernier recours : tout le texte\r\n    return combined;\r\n}\r\n\r\nexport function bridgeParse(resp) {\r\n    const { doc, text } = resp;\r\n\r\n    // 1) Message robuste (text nodes)\r\n    const message = extractMessage(doc);\r\n\r\n    // 2) IDs depuis tous les liens (puis priorise le premier lien)\r\n    const idsAll = parseAllIds(doc);\r\n    const firstLink = doc.querySelector(\"a[href]\");\r\n    const href = firstLink ? firstLink.getAttribute(\"href\") : \"\";\r\n    const idsFirst = parseIdsFromHref(href);\r\n    const ids = { ...idsAll, ...idsFirst };\r\n\r\n    // 3) Action & succès\r\n    const action = inferActionFromText(message);\r\n    let ok = validateOk(action, message);\r\n\r\n    // 4) Bloc d’erreur explicite → échec prioritaire\r\n    if (\r\n        doc.querySelector(\r\n            \".box-content.error, .error, .panel .error, .errorbox\"\r\n        )\r\n    )\r\n        ok = false;\r\n\r\n    const links = {\r\n        first: href || undefined,\r\n        topic:\r\n            all(doc, 'a[href^=\"/t\"], a[href*=\"viewtopic\"]').map((a) =>\r\n                a.getAttribute(\"href\")\r\n            )[0] || undefined,\r\n        forum:\r\n            all(doc, 'a[href^=\"/f\"]').map((a) => a.getAttribute(\"href\"))[0] ||\r\n            undefined,\r\n    };\r\n\r\n    return {\r\n        ok,\r\n        status: resp.status,\r\n        action,\r\n        message,\r\n        ids,\r\n        links,\r\n        href,\r\n        raw: text,\r\n    };\r\n}\r\n\r\nexport const __bridgeInternals = {\r\n    collectTextNodes,\r\n    extractMessage,\r\n    extractSentenceAround,\r\n    inferActionFromText,\r\n    validateOk,\r\n    parseIdsFromHref,\r\n    parseAllIds,\r\n    normalize,\r\n    lower,\r\n};\r\n","import { Adapter } from \"../core/adapter.js\";\r\nimport { httpGet, httpPost } from \"../core/requests.js\";\r\nimport { state } from \"../core/state.js\";\r\nimport { bridgeParse } from \"./bridge.js\";\r\n\r\nclass ForumactifAdapter extends Adapter {\r\n    async get(url) {\r\n        return httpGet(url);\r\n    }\r\n    async post(url, data) {\r\n        return httpPost(url, data);\r\n    }\r\n\r\n    async getForm(url, formSelector) {\r\n        const resp = await this.get(url);\r\n        if (!resp.ok)\r\n            return { ok: false, status: resp.status, text: resp.text };\r\n        const form = resp.doc.querySelector(formSelector);\r\n        if (!form) return { ok: false, status: 404, text: \"Form not found\" };\r\n        const fd = new FormData(form);\r\n        const obj = Object.fromEntries(fd.entries());\r\n        return { ok: true, data: obj, doc: resp.doc };\r\n    }\r\n\r\n    bridge(resp) {\r\n        return bridgeParse(resp);\r\n    }\r\n    get tid() {\r\n        return state.tid;\r\n    }\r\n    get pagetype() {\r\n        return state.pagetype;\r\n    }\r\n}\r\n\r\nconst forumactifAdapter = new ForumactifAdapter();\r\nexport default forumactifAdapter;\r\n","export const isArray = Array.isArray;\r\n\r\nexport const toArray = (v) => (v == null ? [] : isArray(v) ? v : [v]);\r\n\r\nexport function byIdOrArray(input) {\r\n    return toArray(input)\r\n        .filter((x) => x != null)\r\n        .map((x) => (typeof x === \"number\" ? x : parseInt(String(x), 10)))\r\n        .filter((x) => Number.isFinite(x) && x > 0);\r\n}\r\n","import { byIdOrArray } from \"../core/utils.js\";\r\n\r\nexport class BaseResource {\r\n    constructor(ids, adapter) {\r\n        this.ids = byIdOrArray(ids);\r\n        this.adapter = adapter;\r\n    }\r\n    _all(promises) {\r\n        return Promise.all(promises);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class ForumResource extends BaseResource {\r\n    async post(input) {\r\n        const { subject, message, notify = 0 } = input || {};\r\n        if (!subject || !message)\r\n            throw new Error(\"Forum.post: subject et message sont requis\");\r\n        const tasks = this.ids.map((f) =>\r\n            this.adapter\r\n                .post(\"/post\", {\r\n                    post: 1,\r\n                    mode: \"newtopic\",\r\n                    f,\r\n                    subject,\r\n                    message,\r\n                    notify,\r\n                })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class TopicResource extends BaseResource {\r\n    async post(input) {\r\n        const { message, notify = 0 } = input || {};\r\n        if (!message) throw new Error(\"Topic.post: message est requis\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .post(\"/post\", { post: 1, mode: \"reply\", t, message, notify })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async lock() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.lock: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .get(`/modcp?mode=lock&t=${t}&tid=${tid}`)\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async unlock() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.unlock: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .get(`/modcp?mode=unlock&t=${t}&tid=${tid}`)\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async move(newForumId) {\r\n        if (!newForumId) throw new Error(\"Topic.move: forum id manquant\");\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.move: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .post(`/modcp?tid=${tid}`, {\r\n                    tid,\r\n                    new_forum: \"f\" + newForumId,\r\n                    mode: \"move\",\r\n                    t,\r\n                    confirm: 1,\r\n                })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async trash() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.trash: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .get(`/modcp?mode=trash&t=${t}&tid=${tid}`)\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async remove() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"Topic.remove: tid introuvable\");\r\n        const tasks = this.ids.map((t) =>\r\n            this.adapter\r\n                .post(`/modcp?tid=${tid}`, { t, mode: \"delete\", confirm: 1 })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class PostResource extends BaseResource {\r\n    async remove() {\r\n        const tasks = this.ids.map((p) =>\r\n            this.adapter\r\n                .post(\"/post\", { p, mode: \"delete\", confirm: \"\" })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async change({ message }) {\r\n        if (!message) throw new Error(\"Post.change: message requis\");\r\n        const tasks = this.ids.map(async (p) => {\r\n            const form = await this.adapter.getForm(\r\n                `/post?p=${p}&mode=editpost`,\r\n                'form[name=\"post\"]'\r\n            );\r\n            if (!form.ok) return form;\r\n            const data = { ...form.data, message };\r\n            data.post = 1;\r\n            const resp = await this.adapter.post(\"/post\", data);\r\n            return this.adapter.bridge(resp);\r\n        });\r\n        return this._all(tasks);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class UserResource extends BaseResource {\r\n    async pm({ subject, message }) {\r\n        if (!subject || !message)\r\n            throw new Error(\"User.pm: subject et message requis\");\r\n        const username = this.ids.join(\", \");\r\n        const resp = await this.adapter.post(\"/privmsg\", {\r\n            username,\r\n            mode: \"post\",\r\n            post: 1,\r\n            subject,\r\n            message,\r\n        });\r\n        return this.adapter.bridge(resp);\r\n    }\r\n\r\n    async ban({ days = 0, reason = \"\" } = {}) {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"User.ban: tid introuvable\");\r\n        const tasks = this.ids.map((user_id) =>\r\n            this.adapter\r\n                .post(`/modcp?tid=${tid}`, {\r\n                    tid,\r\n                    confirm: 1,\r\n                    mode: \"ban\",\r\n                    user_id,\r\n                    ban_user_date: days,\r\n                    ban_user_reason: reason,\r\n                })\r\n                .then((r) => this.adapter.bridge(r))\r\n        );\r\n        return this._all(tasks);\r\n    }\r\n\r\n    async unban() {\r\n        const tid = this.adapter.tid;\r\n        if (!tid) throw new Error(\"User.unban: tid introuvable\");\r\n        const resp = await this.adapter.post(\r\n            `/admin/index.forum?part=users_groups&sub=users&mode=ban_control&extended_admin=1&tid=${tid}`,\r\n            { users_to_unban: this.ids, unban_users: 1 }\r\n        );\r\n        return this.adapter.bridge(resp);\r\n    }\r\n}\r\n","import { BaseResource } from \"./_base.js\";\r\n\r\nexport default class ChatResource extends BaseResource {\r\n    constructor(adapter) {\r\n        super([], adapter);\r\n    }\r\n    async post({ message }) {\r\n        if (!message) throw new Error(\"Chat.post: message requis\");\r\n        await this.adapter.post(\"/chatbox/actions.forum\", {\r\n            method: \"send\",\r\n            archive: 0,\r\n            message,\r\n        });\r\n        return { ok: true };\r\n    }\r\n}\r\n","import forumactifAdapter from \"./adapters/forumactif.js\";\r\nimport ForumResource from \"./actions/forum.js\";\r\nimport TopicResource from \"./actions/topic.js\";\r\nimport PostResource from \"./actions/post.js\";\r\nimport UserResource from \"./actions/user.js\";\r\nimport ChatResource from \"./actions/chat.js\";\r\n\r\nconst Moderactor = {\r\n    forum: (idOrArray) => new ForumResource(idOrArray, forumactifAdapter),\r\n    topic: (idOrArray) => new TopicResource(idOrArray, forumactifAdapter),\r\n    post: (idOrArray) => new PostResource(idOrArray, forumactifAdapter),\r\n    user: (idOrArray) => new UserResource(idOrArray, forumactifAdapter),\r\n    chat: () => new ChatResource(forumactifAdapter),\r\n    adapter: forumactifAdapter,\r\n};\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Moderactor = Moderactor;\r\n}\r\n\r\nexport default Moderactor;\r\n"],"names":["Adapter","get","url","Error","post","data","getForm","formSelector","bridge","resp","tid","pagetype","htmlFromText","text","DOMParser","parseFromString","async","httpPost","body","form_data","FormData","key","append","entries","map","x","encodeURIComponent","join","encodeForm","r","fetch","method","credentials","headers","ok","status","doc","state","input","document","querySelector","value","anchor","m","getAttribute","match","p","location","pathname","t","f","getTidFromDomOrUrl","test","search","getPageType","all","el","sel","Array","from","querySelectorAll","normalize","s","replace","trim","lower","toLowerCase","ACTION_KEYWORDS","ERROR_KEYWORDS","parseIdsFromHref","href","ids","topic_id","Number","forum_id","post_id","extractMessage","combined","root","out","skip","Set","walker","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","node","parent","parentElement","has","tagName","FILTER_REJECT","nodeValue","FILTER_ACCEPT","FILTER_SKIP","n","nextNode","push","collectTextNodes","sentence","needles","idx","indexOf","filter","i","sort","a","b","undefined","left","Math","max","lastIndexOf","right","length","slice","extractSentenceAround","Object","values","flat","textContent","bridgeParse","message","idsAll","parseAllIds","firstLink","action","keys","some","k","includes","inferActionFromText","msg","hasSuccess","hasError","validateOk","links","first","topic","forum","raw","forumactifAdapter","httpGet","this","form","fd","fromEntries","isArray","byIdOrArray","v","parseInt","String","isFinite","BaseResource","constructor","adapter","_all","promises","Promise","ForumResource","subject","notify","tasks","mode","then","TopicResource","lock","unlock","move","newForumId","new_forum","confirm","trash","remove","PostResource","change","UserResource","pm","username","ban","days","reason","user_id","ban_user_date","ban_user_reason","unban","users_to_unban","unban_users","ChatResource","super","archive","Moderactor","idOrArray","user","chat","window"],"mappings":"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"}